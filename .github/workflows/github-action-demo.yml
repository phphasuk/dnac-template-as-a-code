name: GitHub Actions Demo
on: [push]
env:
  DNAC_PASSWORD: ${{ secrets.DNAC_PASSWORD }}
  WEBEX_API_NOTIFICATION_TOKEN: ${{ secrets.WEBEX_API_NOTIFICATION_TOKEN }}
  DEBUG: "--debug"
jobs:
  set_env:
    runs-on: self-hosted
    name: set_env
    steps:
      - name: var
        id: var
        run: |
          if [ "$GITHUB_REF_NAME }}" == "master" ]; then
            echo "::set-output name=CONFIG_YAML::scripts/config.yaml"
            echo "::set-output name=TEMPLATE_DIR::deployment/"
            echo "::set-output name=TESTBED::testbed.yaml"
          else
            echo "::set-output name=CONFIG_YAML::scripts/config-preprod.yaml"
            echo "::set-output name=TEMPLATE_DIR::deployment-preprod/"
            echo "::set-output name=TESTBED::testbed-preprod.yaml"
          fi
  validate:
    runs-on: self-hosted
    name: validate
    environment: staging
    steps:
      - uses: actions/checkout@v2
      - run: pwd
      - run: scripts/validate.py
  provision:
    runs-on: self-hosted
    name: provision
    steps:
      - run: echo "${{ jobs.set_env.steps.var.CONFIG_YAML }}"
      - run: echo "${{ jobs.set_env.steps.var.TEMPLATE_DIR }}"
#      - run: scripts/provision_templates.py --config ${{ jobs.set_var.steps.CONFIG_YAML --template_dir $TEMPLATE_DIR --results results-1-provision.json ${{ env.DEBUG }}
    needs: [validate]
  deploy:
    runs-on: self-hosted
    name: deploy
    steps:
      - run: scripts/vars.sh
      - run: echo "test"
    needs: [validate, provision]
  test:
    runs-on: self-hosted
    name: test
    steps:
      - run: scripts/vars.sh
      - run: echo "test"
    needs: [validate, provision, deploy]
  notify_success:
    runs-on: self-hosted
    name: notify_success
    if: success()
    steps:
      - run: scripts/vars.sh
      - run: echo "test success"
    needs: [validate, provision, deploy, test]
  notify_failure:
    runs-on: self-hosted
    name: notify_failure
    if: failure()
    steps:
      - run: scripts/vars.sh
      - run: echo "test failure"
    needs: [validate, provision, deploy, test]
