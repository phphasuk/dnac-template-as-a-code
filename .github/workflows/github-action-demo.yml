name: GitHub Actions Demo
on: [push]
env:
  DNAC_PASSWORD: ${{ secrets.DNAC_PASSWORD }}
  WEBEX_API_NOTIFICATION_TOKEN: ${{ secrets.WEBEX_API_NOTIFICATION_TOKEN }}
  DEBUG: "--debug"
  CONFIG_YAML: "xxxx"
  TEMPLATE_DIR: "yyyy"
jobs:
  set_production_environment:
    runs-on: self-hosted
    name: set_production_environment
    if: ${{ GITHUB_REF_NAME }} == "master"
    steps:
      - env:
          CONFIG_YAML: ${{ secrets.CONFIG_YAML }}
          TEMPLATE_DIR: ${{ secrets.TEMPLATE_DIR }}
  validate:
    runs-on: self-hosted
    name: validate
    environment: staging
    steps:
      - uses: actions/checkout@v2
      - run: pwd
      - run: scripts/validate.py
  provision:
    runs-on: self-hosted
    name: provision
    steps:
      - run: cat ${{ env.CONFIG_YAML }}
      - run: echo ${{ env.TEMPLATE_DIR }}
#      - run: scripts/provision_templates.py --config $CONFIG_YAML --template_dir $TEMPLATE_DIR --results results-1-provision.json ${{ env.DEBUG }}
    needs: [validate]
  deploy:
    runs-on: self-hosted
    name: deploy
    steps:
      - run: scripts/vars.sh
      - run: echo "test"
    needs: [validate, provision]
  test:
    runs-on: self-hosted
    name: test
    steps:
      - run: scripts/vars.sh
      - run: echo "test"
    needs: [validate, provision, deploy]
  notify_success:
    runs-on: self-hosted
    name: notify_success
    if: success()
    steps:
      - run: scripts/vars.sh
      - run: echo "test success"
    needs: [validate, provision, deploy, test]
  notify_failure:
    runs-on: self-hosted
    name: notify_failure
    if: failure()
    steps:
      - run: scripts/vars.sh
      - run: echo "test failure"
    needs: [validate, provision, deploy, test]
